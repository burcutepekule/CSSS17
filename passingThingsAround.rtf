{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 -> generate numbers in MATLAB (I trust the generators better in MATLAB), save them to a txt\
-> pass the number of patches and number of species to c++ \
-> use these numbers to have arrays of A and M\
-> Read the txts you saved from MATLAB, assign them to the arrays you created in C++\
-> Recursively generate the ODE in C++ as well\
-> Start ODE solver with random ICs for Xs\
-> Check the stability\
-> If it is stable, \
	-> save the X values that converged to a txt file with the A and M values\
	-> pass these values to MATLAB, \
	-> generate the symbolic jacobian in MATLAB\
	-> generate the numeric jacobian in MATLAB\
	-> save the numeric jacobian to txt\
	-> pass this to C++ and save the eigenvalues\
	-> pass it back to MATLAB to save .mat\
}